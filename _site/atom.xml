<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Joel Carlson</title>
 <link href="http://joelcarlson.github.io/atom.xml" rel="self"/>
 <link href="http://joelcarlson.github.io/"/>
 <updated>2014-10-08T22:40:14+09:00</updated>
 <id>http://joelcarlson.github.io</id>
 <author>
   <name>Joel Carlson</name>
   <email></email>
 </author>

 
 <entry>
   <title>Proof that Rhia is the best</title>
   <link href="http://joelcarlson.github.io/2014/09/22/rhia-best/"/>
   <updated>2014-09-22T00:00:00+09:00</updated>
   <id>http://joelcarlson.github.io/2014/09/22/rhia-best</id>
   <content type="html">&lt;p&gt;I wonder if Rhia will browse my website a bit if I send it to her.  Well, if she does, perhaps she will find this!&lt;/p&gt;

&lt;p&gt;Hi Rhia! I love you!&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;##here is some code to show some love!&lt;/span&gt;
WhoIsBest &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;person&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        ifelse&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;person &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Rhia&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

WhoIsBest&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Rhia&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;





&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text&quot;&gt;## [1] TRUE
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;



Could someone else be the best?


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;WhoIsBest&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Someone Other Than Rhia&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;





&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text&quot;&gt;## [1] FALSE
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


Well, I suppose that settles it! Rhia is best!

Test embedding of a shiny app:
&lt;iframe src=&quot;https://joelcarlson.shinyapps.io/campep&quot; style=&quot;border: none; width: 900px; height: 900px&quot;&gt;&lt;/iframe&gt;

Lets test to see if I can put a direct copy of googleVis output into an md!:

&lt;!-- MotionChart generated in R 3.1.1 by googleVis 0.5.5 package --&gt;
&lt;!-- Tue Oct 07 12:49:39 2014 --&gt;


&lt;!-- jsHeader --&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
 
// jsData 
function gvisDataMotionChartID119c2aa0b2f () {
var data = new google.visualization.DataTable();
var datajson =
[
 [
 &quot;Apples&quot;,
2008,
&quot;West&quot;,
98,
78,
20,
&quot;2008-12-31&quot; 
],
[
 &quot;Apples&quot;,
2009,
&quot;West&quot;,
111,
79,
32,
&quot;2009-12-31&quot; 
],
[
 &quot;Apples&quot;,
2010,
&quot;West&quot;,
89,
76,
13,
&quot;2010-12-31&quot; 
],
[
 &quot;Oranges&quot;,
2008,
&quot;East&quot;,
96,
81,
15,
&quot;2008-12-31&quot; 
],
[
 &quot;Bananas&quot;,
2008,
&quot;East&quot;,
85,
76,
9,
&quot;2008-12-31&quot; 
],
[
 &quot;Oranges&quot;,
2009,
&quot;East&quot;,
93,
80,
13,
&quot;2009-12-31&quot; 
],
[
 &quot;Bananas&quot;,
2009,
&quot;East&quot;,
94,
78,
16,
&quot;2009-12-31&quot; 
],
[
 &quot;Oranges&quot;,
2010,
&quot;East&quot;,
98,
91,
7,
&quot;2010-12-31&quot; 
],
[
 &quot;Bananas&quot;,
2010,
&quot;East&quot;,
81,
71,
10,
&quot;2010-12-31&quot; 
] 
];
data.addColumn(&#39;string&#39;,&#39;Fruit&#39;);
data.addColumn(&#39;number&#39;,&#39;Year&#39;);
data.addColumn(&#39;string&#39;,&#39;Location&#39;);
data.addColumn(&#39;number&#39;,&#39;Sales&#39;);
data.addColumn(&#39;number&#39;,&#39;Expenses&#39;);
data.addColumn(&#39;number&#39;,&#39;Profit&#39;);
data.addColumn(&#39;string&#39;,&#39;Date&#39;);
data.addRows(datajson);
return(data);
}
 
// jsDrawChart
function drawChartMotionChartID119c2aa0b2f() {
var data = gvisDataMotionChartID119c2aa0b2f();
var options = {};
options[&quot;width&quot;] =    600;
options[&quot;height&quot;] =    400;


    var chart = new google.visualization.MotionChart(
    document.getElementById(&#39;MotionChartID119c2aa0b2f&#39;)
    );
    chart.draw(data,options);
    

}
  
 
// jsDisplayChart
(function() {
var pkgs = window.__gvisPackages = window.__gvisPackages || [];
var callbacks = window.__gvisCallbacks = window.__gvisCallbacks || [];
var chartid = &quot;motionchart&quot;;
  
// Manually see if chartid is in pkgs (not all browsers support Array.indexOf)
var i, newPackage = true;
for (i = 0; newPackage &amp;&amp; i &lt; pkgs.length; i++) {
if (pkgs[i] === chartid)
newPackage = false;
}
if (newPackage)
  pkgs.push(chartid);
  
// Add the drawChart function to the global list of callbacks
callbacks.push(drawChartMotionChartID119c2aa0b2f);
})();
function displayChartMotionChartID119c2aa0b2f() {
  var pkgs = window.__gvisPackages = window.__gvisPackages || [];
  var callbacks = window.__gvisCallbacks = window.__gvisCallbacks || [];
  window.clearTimeout(window.__gvisLoad);
  // The timeout is set to 100 because otherwise the container div we are
  // targeting might not be part of the document yet
  window.__gvisLoad = setTimeout(function() {
  var pkgCount = pkgs.length;
  google.load(&quot;visualization&quot;, &quot;1&quot;, { packages:pkgs, callback: function() {
  if (pkgCount != pkgs.length) {
  // Race condition where another setTimeout call snuck in after us; if
  // that call added a package, we must not shift its callback
  return;
}
while (callbacks.length &gt; 0)
callbacks.shift()();
} });
}, 100);
}
 
// jsFooter
&lt;/script&gt;
 
&lt;!-- jsChart --&gt;  
&lt;script type=&quot;text/javascript&quot; src=&quot;https://www.google.com/jsapi?callback=displayChartMotionChartID119c2aa0b2f&quot;&gt;&lt;/script&gt;
 
&lt;!-- divChart --&gt;
  
&lt;div id=&quot;MotionChartID119c2aa0b2f&quot; 
  style=&quot;width: 600; height: 400;&quot;&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Monte Carlo Example Post</title>
   <link href="http://joelcarlson.github.io/2014/09/21/example-mc-post/"/>
   <updated>2014-09-21T00:00:00+09:00</updated>
   <id>http://joelcarlson.github.io/2014/09/21/example-mc-post</id>
   <content type="html">&lt;p&gt;This is just an example to see if a more complicated .rmd file can survive conversion from .rmd to .md&lt;/p&gt;

&lt;h3&gt;Question 2 a)&lt;/h3&gt;

&lt;p&gt;Calculate the area encompassed by \(x^2 + 4y^2 = 4\)&lt;/p&gt;

&lt;p&gt;The x intercept:&lt;br&gt;
\(x^2 + 4y^2 = 4\) 
\(x^2 + 4(0)^2 = 4\)&lt;br&gt;
\(x = \sqrt{4} = 2\)  &lt;/p&gt;

&lt;p&gt;And y intercept:&lt;br&gt;
\((0)^2 + 4y^2 = 4\)&lt;br&gt;
\(y = \sqrt{4/4} = 1\)  &lt;/p&gt;

&lt;p&gt;So we will choose random numbers from \(0 \leq x \leq 2\) and \(0 \leq y \leq 1\) and test whether or not fall inside or outside of our function.&lt;/p&gt;

&lt;p&gt;Below is a function which has three steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Create a data frame of a given size with random $x$ and $y$ values within our defined intercept bounds&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create a column of the function evaluated using the $x$ and $y$ values&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create a new column that is &lt;code&gt;1&lt;/code&gt; if the $x$ and $y$ values are below our function&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;valueCalc &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;iterations&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;#Create data frame&lt;/span&gt;
    values &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; data.frame&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;runif&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;iterations&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; y&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;runif&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;iterations&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;#Calculations&lt;/span&gt;
    values&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;calc &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; values&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; values&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;y&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;#Create counting column &lt;/span&gt;
    values&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;inside &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; ifelse&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;values&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;calc &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    values
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Let&amp;#39;s look at a quick example with only 5 iterations:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;valueCalc&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text&quot;&gt;##       x       y  calc inside
## 1 1.830 0.01203 3.351      1
## 2 1.527 0.75843 4.632      0
## 3 1.611 0.49895 3.592      1
## 4 1.468 0.46611 3.023      1
## 5 1.364 0.90101 5.108      0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Lets look at a plot of the given function, and 10 random points, and 100 random points:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/figs/Example%20Post%20-%20MC.rmd/unnamed-chunk-5.png&quot; alt=&quot;center&quot;&gt; &lt;/p&gt;

&lt;p&gt;To calculate the area of the defined shape we note that the area of the square is \(2 * 1 = 2\), and a certain proportion of that area is taken up by the defined shape (area below the function). By looking at the proportion of the random points that fall inside &lt;em&gt;vs&lt;/em&gt; outside the shape (that is, the sum of our &lt;code&gt;inside&lt;/code&gt; column), we can guess its area.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#100 iterations&lt;/span&gt;
hundred &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; valueCalc&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
sum&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;hundred&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;inside&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text&quot;&gt;## [1] 0.82
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#10000 iterations&lt;/span&gt;
tenthousand &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; valueCalc&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
sum&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;tenthousand&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;inside&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text&quot;&gt;## [1] 0.7807
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#1000000 iterations&lt;/span&gt;
million &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; valueCalc&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
sum&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;million&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;inside&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1000000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text&quot;&gt;## [1] 0.7849
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is just \(\frac{1}{4}\) of the shape, however.  The shape is symmetrical, so the proportion of points inside &lt;em&gt;vs&lt;/em&gt; outside of the function will remain constant. In an area \(4\) times as large, or \(4 * 2 = 8 m^2\), \(78.49\%\) of the area is taken up by the shape.  That is \(0.7849 * 8m^2 = 6.2792m^2\) is the area. &lt;/p&gt;

&lt;p&gt;We can confirm this with an integral:
\(2\int_{-2}^{2}\sqrt{\frac{4-x^2}{4}}\,dx = 2pi \approx 6.28\)&lt;/p&gt;

&lt;h3&gt;Question 2 b)&lt;/h3&gt;

&lt;p&gt;A similar procedure as &lt;em&gt;Question 2 a)&lt;/em&gt; is followed.  This time we want the relative area of the shape defined by: \((x-1)^2 + y^2 = 1\).&lt;/p&gt;

&lt;p&gt;This is a circle shifted by \(1\) to the right on the \(x-axis\).  Thus the intercepts are \(x = 0, 2\) and \(y = 0\)&lt;/p&gt;

&lt;p&gt;The shift moving the center of the cicle won&amp;#39;t change our boundaries in this case, we will just have to be more careful at the end when we are talking about relative proportions.&lt;/p&gt;

&lt;p&gt;We will define a similar function:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;valueCalcb &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;iterations&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;#Create data frame&lt;/span&gt;
    values &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; data.frame&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;runif&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;iterations&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; y&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;runif&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;iterations&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;#Calculations&lt;/span&gt;
    values&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;calc &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;values&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; values&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;y&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;#Create counting column &lt;/span&gt;
    values&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;inside &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; ifelse&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;values&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;calc &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    values
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;valueCalcb&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text&quot;&gt;##        x        y    calc inside
## 1 1.4803 0.504945 0.48562      1
## 2 0.7941 0.001354 0.04239      1
## 3 0.8626 0.776546 0.62190      1
## 4 1.1135 0.325987 0.11916      1
## 5 0.4893 0.990583 1.24206      0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And plotted:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/figs/Example%20Post%20-%20MC.rmd/unnamed-chunk-10.png&quot; alt=&quot;center&quot;&gt; &lt;/p&gt;

&lt;p&gt;With proportions:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#1000000 iterations&lt;/span&gt;
millionb &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; valueCalcb&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
sum&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;millionb&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;inside&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1000000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text&quot;&gt;## [1] 0.7863
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This time our square area is of size \(2 * 2 = 4m^2\) and the proportion of hits inside the shape is \(78.63\%\) thus the area is \(0.7863 * 4m^2 = 3.1452 \approx pi\).  This makes sense, as it is a circle of \(radius = 1\), merely shifted to the side. &lt;/p&gt;
</content>
 </entry>
 

</feed>
